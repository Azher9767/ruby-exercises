=begin
Write a function that takes an array of numbers (integers for the tests) and a target number.
It should find two different items in the array that, when added together, give the target value. 
The indices of these items should then be returned in a tuple / list (depending on your language) 
like so: (index1, index2).
For the purposes of this kata, some tests may have multiple answers; any valid solutions will be accepted.
The input will always be valid (numbers will be an array of length 2 or greater, and all of the items will 
be numbers; target will always be the sum of two different items from that array).

two_sum([1, 2, 3], 4) == {0, 2}
=end

  RSpec.describe 'two_sum' do
def two_sum(num, target) 
  arr = []
    hash1 = {}
      num.each_with_index do |value, index|
        m = target - value
        
        if (hash1.find{|key,val|
          key == value })
          arr << hash1[value]
          arr << index
          return arr 
         else    
           hash1[m] = index 
        end 
      end
  end

    it 'test 1' do 
      expect(two_sum([1, 2, 3], 4)).to eq([0, 2])
    end

    it 'test 2' do 
      expect(two_sum([1234, 5678, 9012], 14690)).to eq([1, 2])
    end
    it 'test 2' do 
      expect(two_sum([2, 2, 3], 4)).to eq([0, 1])
    end
  end
    
